import React, { useState, useEffect } from "react";
import PlanCard from "../PlanCard/PlanCard";
import Loader from "../Loader/Loader";
import { fetchPlans } from "../../utils/api";
import "./plan-list.css";

const PlanList = () => {
  const [plans, setPlans] = useState(null);
  const [selectedPlan, setSelectedPlan] = useState(null);
  const [error, setError] = useState(null);
  const [isWideScreen, setIsWideScreen] = useState(window.innerWidth >= 1150);

  useEffect(() => {
    const handleResize = () => {
      setIsWideScreen(window.innerWidth >= 1150);
    };

    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  useEffect(() => {
    const loadPlans = async () => {
      try {
        const plans = await fetchPlans();
        setPlans(plans.filter((plan) => plan.isPopular));
      } catch (error) {
        setError(error.message);
      }
    };

    loadPlans();
  }, []);

  const handleSelectPlan = (index) => {
    setSelectedPlan(index);
  };

  if (error) {
    return <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}</p>;
  }

  if (!plans) {
    return <Loader />;
  }

  const planClassNames = {
    "1 –Ω–µ–¥–µ–ª—è": "weekly-price",
    "1 –º–µ—Å—è—Ü": "monthly-price",
    "3 –º–µ—Å—è—Ü–∞": "three-months-price",
    "–Ω–∞–≤—Å–µ–≥–¥–∞": `forever-price ${isWideScreen ? "grid-forever" : ""}`,
  };

  const descriptions = {
    "1 –Ω–µ–¥–µ–ª—è": "–ß—Ç–æ–±—ã –ø—Ä–æ—Å—Ç–æ –Ω–∞—á–∞—Ç—å üëçüèª",
    "1 –º–µ—Å—è—Ü": "–ü—Ä–∏–≤–µ—Å—Ç–∏ —Ç–µ–ª–æ –≤–ø–æ—Ä—è–¥–æ–∫ üí™üèª",
    "3 –º–µ—Å—è—Ü–∞": "–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ üî•",
    "–Ω–∞–≤—Å–µ–≥–¥–∞": "–í—Å–µ–≥–¥–∞ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–≤–æ—ë –∑–¥–æ—Ä–æ–≤—å–µ ‚≠êÔ∏è",
  };

  return (
    <ul className="main-block-section__section-prace">
      {plans.map((plan, index) => (
        <PlanCard
          key={plan.id}
          period={plan.name}
          discountPrice={plan.discountPrice}
          fullPrice={plan.fullPrice}
          description={descriptions[plan.name] || ""}
          className={`${planClassNames[plan.name] || ""} ${plan.isDiscount ? "discount" : ""} ${selectedPlan === index ? "active" : ""}`}
          onClick={() => handleSelectPlan(index)}
        />
      ))}
    </ul>
  );
};

export default PlanList;
